[{"path":"https://tombeesley.github.io/eyetools/articles/package_workflow.html","id":"steps","dir":"Articles","previous_headings":"","what":"Steps","title":"Package Workflow","text":"Make branch master Make changes package components (scripts, data, etc) Use load_all() make updates available use. Use document() update function documentation NAMESPACE Use check() make sure errors, correct warnings, etc. Commit github.","code":""},{"path":"https://tombeesley.github.io/eyetools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tom Beesley. Maintainer.","code":""},{"path":"https://tombeesley.github.io/eyetools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Beesley T (2022). eyetools: Tools eye data analysis. R package version 0.4.3, https://tombeesley.github.io/eyetools/.","code":"@Manual{,   title = {eyetools: Tools for eye data analysis},   author = {Tom Beesley},   year = {2022},   note = {R package version 0.4.3},   url = {https://tombeesley.github.io/eyetools/}, }"},{"path":[]},{"path":"https://tombeesley.github.io/eyetools/index.html","id":"a-set-of-tools-for-eye-data-processing-analysis-and-visualisation-in-r","dir":"","previous_headings":"","what":"A set of tools for eye data processing, analysis and visualisation in R","title":"Tools for eye data analysis","text":"eyetools package provides set simple tools facilitate common steps processing analysis eye data. intended use data psychological experiments. idea workflow aided functions, going processing raw data, extraction event related data (.e., fixations, saccades), summarising data trial level (e.g., time areas interest). Warning - still experimental form! Please check results carefully install: devtools::install_github(\"tombeesley/eyetools\") free use GNU General Public Licence.. “Roadmap” functions:","code":""},{"path":[]},{"path":"https://tombeesley.github.io/eyetools/index.html","id":"installation","dir":"","previous_headings":"How to use eyetools (work in progress)","what":"Installation","title":"Tools for eye data analysis","text":"can install eyetools using following code: load :","code":"if (!require(devtools)) {   install.packages(\"devtools\")   library(devtools) } install_github(\"tombeesley/eyetools\") library(eyetools)"},{"path":"https://tombeesley.github.io/eyetools/index.html","id":"the-format-of-raw-data","dir":"","previous_headings":"How to use eyetools (work in progress)","what":"The format of raw data","title":"Tools for eye data analysis","text":"Data needs particular format compatible functions eyetools. format 4 columns data, row representing sample. four columns : time, x, y, trial. can see example built data sets:","code":"example_raw_sac ## # A tibble: 32,608 x 4 ##     time     x     y trial ##    <dbl> <dbl> <dbl> <dbl> ##  1     0  940.  535.     1 ##  2     3  940.  536.     1 ##  3     7  936.  533.     1 ##  4    10  939.  536.     1 ##  5    13  944.  533.     1 ##  6    17  939.  535.     1 ##  7    20  938.  531.     1 ##  8    23  939.  536.     1 ##  9    27  940.  534.     1 ## 10    30  942.  537.     1 ## # ... with 32,598 more rows"},{"path":"https://tombeesley.github.io/eyetools/index.html","id":"repairing-data","dir":"","previous_headings":"How to use eyetools (work in progress)","what":"Repairing data","title":"Tools for eye data analysis","text":"Raw data often contain missing samples, can attempt repair. eyetools interpolation() function can use . produce report succesful repair terms missing data interpolation: can also apply smoothing function (smoother()) data, particularly important analysis saccadic velocities.","code":"eyetools::interpolate(example_raw_sac, report = TRUE) ## [[1]] ## # A tibble: 32,608 x 4 ##     time     x     y trial ##    <dbl> <dbl> <dbl> <dbl> ##  1     0  940.  535.     1 ##  2     3  940.  536.     1 ##  3     7  936.  533.     1 ##  4    10  939.  536.     1 ##  5    13  944.  533.     1 ##  6    17  939.  535.     1 ##  7    20  938.  531.     1 ##  8    23  939.  536.     1 ##  9    27  940.  534.     1 ## 10    30  942.  537.     1 ## # ... with 32,598 more rows ##  ## [[2]] ## # A tibble: 1 x 2 ##   missing_perc_before missing_perc_after ##                 <dbl>              <dbl> ## 1              0.0998             0.0952 raw_data <- eyetools::interpolate(example_raw_sac) # store as new object smooth_data <- eyetools::smoother(example_raw_sac) library(tidyverse)  r <- filter(raw_data, trial == 2) s <- filter(smooth_data, trial == 2)  ggplot() +   geom_line(data = r,              aes(x = time, y = y),             colour = \"red\") +   geom_line(data = s,              aes(x = time, y = y),             colour = \"blue\")"},{"path":"https://tombeesley.github.io/eyetools/index.html","id":"processing-fixations","dir":"","previous_headings":"How to use eyetools (work in progress)","what":"Processing fixations","title":"Tools for eye data analysis","text":"function fix_dispersion() dispersion-based algorithm identifying fixations, based algorithm described Salvucci Goldberg (2000). Passing raw data return data frame fixations ordered trial fixation sequence, averaged x y coordinates, timestamps duration. “min_dur” parameter restrict fixations certain duration. “disp_tol” parameter sets tolerance dispersion data within fixation. Exploratory analysis data needed find suitable values .","code":"raw_data_f <- filter(raw_data, trial <= 3) # get a sample of trials  fix_dispersion(raw_data_f, min_dur = 120, disp_tol = 100) ##    trial fix_n start  end duration    x   y prop_NA min_dur disp_tol ## 1      1     1     0  230      230  937 535   0.000     120      100 ## 2      1     2   273  460      187  170 500   0.000     120      100 ## 3      1     3   643 1180      537 1743 534   0.000     120      100 ## 4      1     4  1306 1426      120  252 503   0.243     120      100 ## 5      1     5  1536 1656      120  131 530   0.243     120      100 ## 6      1     6  1660 1816      156  135 533   0.000     120      100 ## 7      2     1     0  230      230  938 539   0.000     120      100 ## 8      2     2   273  407      134  201 515   0.000     120      100 ## 9      2     3   410  767      357  143 522   0.000     120      100 ## 10     2     4   940 1070      130 1696 527   0.000     120      100 ## 11     2     5  1073 1247      174 1739 535   0.000     120      100 ## 12     3     1     0  167      167  941 543   0.000     120      100 ## 13     3     2   210  533      323  159 521   0.000     120      100 ## 14     3     3   623  743      120 1673 519   0.243     120      100 ## 15     3     4   747 1097      350 1732 547   0.000     120      100 ## 16     3     5  1187 1307      120  211 543   0.243     120      100"},{"path":"https://tombeesley.github.io/eyetools/index.html","id":"plotting-data","dir":"","previous_headings":"How to use eyetools (work in progress)","what":"Plotting data","title":"Tools for eye data analysis","text":"function spatial_plot() wrapper series ggplot commands plot raw data fixation summaries.","code":"library(patchwork) # patchwork is used here to plot adjacent figures  t_raw <- filter(example_raw_sac, trial == 9)  # process fixations t_fix <- fix_dispersion(t_raw, disp_tol = 100, min_dur = 150)  raw_plot <- spatial_plot(raw_data = t_raw, plot_header = TRUE) fix_plot <- spatial_plot(raw_data = t_raw, fix_data = t_fix)  raw_plot/fix_plot # combined plot with patchwork"},{"path":"https://tombeesley.github.io/eyetools/index.html","id":"assessing-time-on-areas-of-interest","dir":"","previous_headings":"How to use eyetools (work in progress)","what":"Assessing time on areas of interest","title":"Tools for eye data analysis","text":"function AOI_time() can used calculate time spent areas interest. Areas interest need defined x y centre points, width height pixels: AOI_time() uses fixation data input function. example finding time spent 3 rectangular regions across first 10 trials: can include AOIs within spatial_plot():  can also define AOIs circles specifying radius 3rd column setting 4th column NA:  Circular AOIs also handled AOI_time produce different results comparable rectangular AOIs. fixation 5 falls outside circular AOI, within region rectangular AOI:","code":"AOI_regions <- data.frame(matrix(nrow = 3, ncol = 4)) colnames(AOI_regions) <- c(\"x\", \"y\", \"width_radius\", \"height\")  AOI_regions[1,] <- c(960, 540, 300, 300) # X, Y, W, H - square AOI_regions[2,] <- c(200, 540, 300, 300) # X, Y, W, H - square AOI_regions[3,] <- c(1720, 540, 300, 300) # X, Y, W, H - square t_raw <- filter(example_raw_sac, between(trial,1,10))  # process fixations t_fix <- fix_dispersion(t_raw, disp_tol = 100, min_dur = 150)  AOI_time(t_fix, AOIs = AOI_regions) ##    trial AOI_1 AOI_2 AOI_3 ## 1      1   230   337   537 ## 2      2   230   487   304 ## 3      3   167   473   477 ## 4      4   283   370   349 ## 5      5   246   360   363 ## 6      6   200   217     0 ## 7      7   150   337   797 ## 8      8   180   346   853 ## 9      9   174   260   496 ## 10    10   197   150   826 t_raw <- filter(example_raw_sac, trial == 9) # single trial for plotting purposes  # process fixations t_fix <- fix_dispersion(t_raw, disp_tol = 100, min_dur = 150)  spatial_plot(raw_data = t_raw, fix_data = t_fix, AOIs = AOI_regions) AOI_regions <- data.frame(matrix(nrow = 3, ncol = 4)) colnames(AOI_regions) <- c(\"x\", \"y\", \"width_radius\", \"height\")  AOI_regions[1,] <- c(960, 540, 150, NA) # X, Y, R - circle AOI_regions[2,] <- c(200, 540, 300, 300) # X, Y, W, H - square AOI_regions[3,] <- c(1720, 540, 300, 300) # X, Y, W, H - square  t_raw <- filter(example_raw_sac, between(trial,1,10))  # process fixations t_fix <- fix_dispersion(t_raw, disp_tol = 100, min_dur = 150)  spatial_plot(raw_data = t_raw, fix_data = t_fix, AOIs = AOI_regions) AOI_regions <- data.frame(matrix(nrow = 2, ncol = 4)) colnames(AOI_regions) <- c(\"x\", \"y\", \"width_radius\", \"height\")  AOI_regions[1,] <- c(960, 540, 150, NA) # X, Y, R - circle in centre AOI_regions[2,] <- c(960, 540, 300, 300) # X, Y, W, H - square in centre  t_raw <- filter(example_raw_sac, trial == 13)  # process fixations t_fix <- fix_dispersion(t_raw, disp_tol = 100, min_dur = 150)  spatial_plot(raw_data = t_raw, fix_data = t_fix, AOIs = AOI_regions) AOI_time(t_fix, AOIs = AOI_regions) ##    trial AOI_1 AOI_2 ## 13    13   180   330"},{"path":"https://tombeesley.github.io/eyetools/index.html","id":"processing-saccades","dir":"","previous_headings":"How to use eyetools (work in progress)","what":"Processing saccades","title":"Tools for eye data analysis","text":"function VTI_saccade() provides means processing data saccades, based “velocity threshold identification” algorithm, described Salvucci Goldberg (2000). described , wise use smoother() function data first. sample rate can set known, can approximated using timestamps data. threshold determines degrees visual angle per second needed indicate presence saccadic eye-movement. Saccadic eye movements can plotted alongside data using spatial_plot() function:","code":"t_raw <- filter(example_raw_sac, between(trial,1,10))  t_smooth <- smoother(t_raw)  VTI_saccade(t_smooth, sample_rate = 300) ##    trial sac_n start  end duration  origin_x origin_y terminal_x terminal_y ## 1      1     1   223  287       64  870.3588 527.6547   177.1630   494.6964 ## 2      1     2   447  530       83  209.4739 500.0963  1423.6778   481.3370 ## 3      2     1   230  280       50  843.5225 537.3153   258.2328   513.4092 ## 4      2     2   757  840       83  184.2432 518.7122  1513.4706   514.5291 ## 5      3     1   163  217       54  864.0695 538.9868   188.6405   517.6894 ## 6      3     2   527  550       23  236.2502 533.8763   456.4131   571.9000 ## 7      3     3  1087 1120       33 1671.8701 542.0387  1278.9085   558.7318 ## 8      4     1   280  340       60  941.2610 525.2997   167.3127   517.7416 ## 9      4     2   696  730       34  193.3663 514.7454   638.2664   545.7368 ## 10     5     1   240  293       53  989.2586 539.9973  1655.2936   541.0273 ## 11     5     2   646  690       44 1688.9012 545.7763  1023.0553   527.7667 ## 12     6     1   197  247       50  828.6306 532.1597   194.2109   524.7652 ## 13     6     2   590  627       37  189.2387 524.2148   865.8235   511.5511 ## 14     7     1   174  224       50  746.4592 532.5643   238.6413   526.0246 ## 15     8     1   174  237       63  869.1958 545.3931   205.9854   520.0820 ## 16     8     2   564  664      100  162.7739 512.4705  1644.4917   553.6281 ## 17     9     1   170  227       57  880.2617 546.0806   205.5746   532.1546 ## 18     9     2   474  564       90  216.2176 517.2547  1621.2220   545.1010 ## 19    10     1   194  254       60  845.9267 539.5713   226.3948   524.6715 ## 20    10     2   530  624       94  180.4137 519.7535  1595.2826   557.3451 ##    mean_velocity peak_velocity ## 1       272.5147      467.6514 ## 2       362.4432      625.5313 ## 3       288.7795      438.2568 ## 4       395.9804      681.8466 ## 5       311.9050      487.7608 ## 6       237.5178      343.4771 ## 7       289.8878      429.8076 ## 8       321.6201      504.1717 ## 9       322.5088      550.1424 ## 10      310.0758      476.9325 ## 11      373.8080      574.9975 ## 12      314.3620      462.7681 ## 13      446.6401      654.1694 ## 14      251.9393      359.9658 ## 15      263.1169      421.9078 ## 16      370.0669      675.9970 ## 17      294.4052      473.1296 ## 18      390.8524      664.2136 ## 19      258.9834      400.2764 ## 20      377.0585      673.8068 t_smooth <- filter(t_smooth, trial == 8)  t_fix <- fix_dispersion(t_smooth, disp_tol = 100, min_dur = 150)  t_sac <- VTI_saccade(t_smooth, sample_rate = 300, threshold = 100)  spatial_plot(raw_data = t_smooth, fix_data = t_fix, sac_data = t_sac)"},{"path":[]},{"path":"https://tombeesley.github.io/eyetools/reference/AOI_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Area of interest analysis at the trial level — AOI_time","title":"Area of interest analysis at the trial level — AOI_time","text":"Analyses total time defined AOI regions across trials. Currently works fixation data input.","code":""},{"path":"https://tombeesley.github.io/eyetools/reference/AOI_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area of interest analysis at the trial level — AOI_time","text":"","code":"AOI_time(data, AOIs, AOI_names = NULL)"},{"path":"https://tombeesley.github.io/eyetools/reference/AOI_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Area of interest analysis at the trial level — AOI_time","text":"data dataframe fixation data (fix_dispersion) AOIs dataframe areas interest (AOIs), one row per AOI (x, y, width_radius, height). AOI_names optional vector AOI names replace default \"AOI_1\", \"AOI_2\", etc.","code":""},{"path":[]},{"path":[]},{"path":"https://tombeesley.github.io/eyetools/reference/VTI_saccade.html","id":null,"dir":"Reference","previous_headings":"","what":"Velocity threshold identification of saccades — VTI_saccade","title":"Velocity threshold identification of saccades — VTI_saccade","text":"Takes ...","code":""},{"path":"https://tombeesley.github.io/eyetools/reference/VTI_saccade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Velocity threshold identification of saccades — VTI_saccade","text":"","code":"VTI_saccade(data, sample_rate = NULL, threshold = 150, minDur = 20, ...)"},{"path":"https://tombeesley.github.io/eyetools/reference/VTI_saccade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Velocity threshold identification of saccades — VTI_saccade","text":"data dataframe raw data (time, x, y, trial) one participant sample_rate sample rate eye-tracker. default NULL, computed timestamp data number samples threshold velocity threshold (degrees VA / sec) used identifying saccades minDur minimum duration (ms) expected saccades. helps avoid identification short saccades occuring boundary velocity threshold","code":""},{"path":[]},{"path":[]},{"path":"https://tombeesley.github.io/eyetools/reference/combine_eyes.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine binocular data into single X/Y coordinate pairs — combine_eyes","title":"Combine binocular data into single X/Y coordinate pairs — combine_eyes","text":"Combines data binocular samples X/Y coordinate pairs. Two methods can used: \"average\" \"best_eye\". \"average\", result based average two eyes sample, samples data single eye, eye used. \"best_eye\", summary proportion missing samples computed, eye fewest missing samples used.","code":""},{"path":"https://tombeesley.github.io/eyetools/reference/combine_eyes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine binocular data into single X/Y coordinate pairs — combine_eyes","text":"","code":"combine_eyes(data, method = \"average\")"},{"path":"https://tombeesley.github.io/eyetools/reference/combine_eyes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine binocular data into single X/Y coordinate pairs — combine_eyes","text":"data raw data columns time, left_x, left_y, right_x, right_y, trial trial_phase method either \"average\" \"best_eye\" - see description.","code":""},{"path":[]},{"path":"https://tombeesley.github.io/eyetools/reference/combine_eyes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine binocular data into single X/Y coordinate pairs — combine_eyes","text":"","code":"combine_eyes(example_two_eyes_raw, method = \"average\") #> Error in is.data.frame(x): object 'example_two_eyes_raw' not found"},{"path":"https://tombeesley.github.io/eyetools/reference/dist_to_visual_angle.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute visual angle from distance metrics — dist_to_visual_angle","title":"Compute visual angle from distance metrics — dist_to_visual_angle","text":"Takes single value vector distances returns visual angle equivalent.","code":""},{"path":"https://tombeesley.github.io/eyetools/reference/dist_to_visual_angle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute visual angle from distance metrics — dist_to_visual_angle","text":"","code":"dist_to_visual_angle(   vector,   dist_type = \"cm\",   view_dist_cm = 60,   screen_width_cm = 51,   screen_width_pixels = 1920 )"},{"path":"https://tombeesley.github.io/eyetools/reference/dist_to_visual_angle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute visual angle from distance metrics — dist_to_visual_angle","text":"vector vector distances (single distance) dist_type default \"cm\". Specify \"pixel\" conversion pixel values. view_dist_cm viewing distance cm. Default 60cm. screen_width_cm used conversion pixel values. Default 51 cm (24\" monitor). screen_width_pixels used conversion pixel values. Default 1920 pixels.","code":""},{"path":[]},{"path":"https://tombeesley.github.io/eyetools/reference/dist_to_visual_angle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute visual angle from distance metrics — dist_to_visual_angle","text":"","code":"dist_to_visual_angle(5) # calculate visual angle of 5cm width at 60 cm viewing angle #> [1] 4.771888 dist_to_visual_angle(c(2,10), view_dist_cm = 50) # calculate visual angle of stimuli 2 and 10cm width at 50 cm viewing angle #> [1]  2.291526 11.421186 dist_to_visual_angle(150, dist_type = \"pixels\") # calculate visual angle of 150 pixel wide #> [1] 102.6804"},{"path":"https://tombeesley.github.io/eyetools/reference/example_raw_binocular.html","id":null,"dir":"Reference","previous_headings":"","what":"Example binocular eye data — example_raw_binocular","title":"Example binocular eye data — example_raw_binocular","text":"dataset containing raw data samples 10 trials. data eyes, therefore dataset used example can used \"combine_eyes\" function.","code":""},{"path":"https://tombeesley.github.io/eyetools/reference/example_raw_binocular.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example binocular eye data — example_raw_binocular","text":"","code":"example_raw_binocular"},{"path":"https://tombeesley.github.io/eyetools/reference/example_raw_binocular.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example binocular eye data — example_raw_binocular","text":"data frame X rows 4 variables: time timestamp sample x_left x coordinate left eye y_left y coordinate left eye x_right x coordinate right eye y_right y coordinate right eye trial trial number","code":""},{"path":"https://tombeesley.github.io/eyetools/reference/example_raw_fix.html","id":null,"dir":"Reference","previous_headings":"","what":"Example eye data from a simple contingency learning task — example_raw_fix","title":"Example eye data from a simple contingency learning task — example_raw_fix","text":"dataset containing raw data samples 72 trials simple learning experiment, several clearly defined AOIs screen, producing many distinct fixations trial. Data collected 300 Hz Tobii eye-tracker. example format raw data needs order work functions eyetools.","code":""},{"path":"https://tombeesley.github.io/eyetools/reference/example_raw_fix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example eye data from a simple contingency learning task — example_raw_fix","text":"","code":"example_raw_fix"},{"path":"https://tombeesley.github.io/eyetools/reference/example_raw_fix.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example eye data from a simple contingency learning task — example_raw_fix","text":"data frame 77,669 rows 4 variables: time timestamp sample x x coordinate eye y y coordinate eye trial trial number","code":""},{"path":"https://tombeesley.github.io/eyetools/reference/example_raw_sac.html","id":null,"dir":"Reference","previous_headings":"","what":"Example eye data visual search — example_raw_sac","title":"Example eye data visual search — example_raw_sac","text":"dataset containing raw data samples 100 trials simple visual search task, saccades made (left right) central location screen trial. Data collected 300 Hz Tobii eye-tracker. example format raw data needs order work functions eyetools.","code":""},{"path":"https://tombeesley.github.io/eyetools/reference/example_raw_sac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example eye data visual search — example_raw_sac","text":"","code":"example_raw_sac"},{"path":"https://tombeesley.github.io/eyetools/reference/example_raw_sac.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example eye data visual search — example_raw_sac","text":"data frame 32608 rows 4 variables: time timestamp sample x x coordinate eye y y coordinate eye trial trial number","code":""},{"path":"https://tombeesley.github.io/eyetools/reference/eyetools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"eyetools: Tools for eye data analysis — eyetools-package","title":"eyetools: Tools for eye data analysis — eyetools-package","text":"set tools eye data processing. intended flow data processing, fixation analysis, data visualisation trial level summaries.","code":""},{"path":"https://tombeesley.github.io/eyetools/reference/fix_dispersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Fixation detection by dispersion method — fix_dispersion","title":"Fixation detection by dispersion method — fix_dispersion","text":"Detects fixations according method similar proposed Salvucci & Goldberg (1996). Evaluates absolute range values x y coordinates. Looks sufficient periods ranges specified dispersion tolerance. NAs considered breaks data permitted within valid fixation period.","code":""},{"path":"https://tombeesley.github.io/eyetools/reference/fix_dispersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fixation detection by dispersion method — fix_dispersion","text":"","code":"fix_dispersion(   data,   min_dur = 150,   disp_tol = 100,   run_interp = TRUE,   NA_tol = 0.25,   ... )"},{"path":"https://tombeesley.github.io/eyetools/reference/fix_dispersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fixation detection by dispersion method — fix_dispersion","text":"data dataframe raw data (time, x, y, trial) one participant (standardised raw data form eyeproc) min_dur Minimum duration (milliseconds) period fixations assessed disp_tol Maximum tolerance (pixels) dispersion values allowed fixation period run_interp include call eyetools::interpolation trial NA_tol proportion NAs tolerated within window samples evaluated fixation","code":""},{"path":[]},{"path":[]},{"path":"https://tombeesley.github.io/eyetools/reference/interpolate.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolation of missing data (NAs) — interpolate","title":"Interpolation of missing data (NAs) — interpolate","text":"Extends zoo::na.approx zoo::na.spline functions include report provides proportion missing data interpolation process. handy evaluating effectiveness repair.","code":""},{"path":"https://tombeesley.github.io/eyetools/reference/interpolate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolation of missing data (NAs) — interpolate","text":"","code":"interpolate(data, maxgap = 25, method = \"approx\", report = FALSE)"},{"path":"https://tombeesley.github.io/eyetools/reference/interpolate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolation of missing data (NAs) — interpolate","text":"data dataframe columns time, x, y, trial (standardised raw data form eyeproc) maxgap maximum number consecutive NAs fill. longer gaps left unchanged (see zoo package) method \"approx\" linear interpolation \"spline\" cubic spline interpolation report default FALSE. TRUE, return value list containing returned data frame report.","code":""},{"path":[]},{"path":"https://tombeesley.github.io/eyetools/reference/interpolate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolation of missing data (NAs) — interpolate","text":"","code":"interpolate(example_raw_psy, maxgap = 20) #> Error in group_by(., .data$trial): object 'example_raw_psy' not found interpolate(example_raw_psy, method = \"approx\", maxgap = 50, report = TRUE) #> Error in mean((is.na(data$x) | is.na(data$y))): object 'example_raw_psy' not found"},{"path":"https://tombeesley.github.io/eyetools/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://tombeesley.github.io/eyetools/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://tombeesley.github.io/eyetools/reference/smoother.html","id":null,"dir":"Reference","previous_headings":"","what":"Smoothing of raw data — smoother","title":"Smoothing of raw data — smoother","text":"wrapper stats::loess function, default parameters suitable smoothing raw eye data","code":""},{"path":"https://tombeesley.github.io/eyetools/reference/smoother.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smoothing of raw data — smoother","text":"","code":"smoother(data, span = 0.1)"},{"path":"https://tombeesley.github.io/eyetools/reference/smoother.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smoothing of raw data — smoother","text":"data dataframe raw data (time, x, y, trial) one participant span stats::loess. parameter α controls degree smoothing.","code":""},{"path":[]},{"path":[]},{"path":"https://tombeesley.github.io/eyetools/reference/spatial_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot raw data and fixations — spatial_plot","title":"Plot raw data and fixations — spatial_plot","text":"tool visualising raw eye-data, processed fixations, saccades. Can three data types. Fixations can labeled order made. Can overlay areas interest (AOIs) customise resolution.","code":""},{"path":"https://tombeesley.github.io/eyetools/reference/spatial_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot raw data and fixations — spatial_plot","text":"","code":"spatial_plot(   raw_data = NULL,   fix_data = NULL,   sac_data = NULL,   AOIs = NULL,   res = c(0, 1920, 0, 1080),   flip_y = FALSE,   show_fix_order = TRUE,   plot_header = FALSE )"},{"path":"https://tombeesley.github.io/eyetools/reference/spatial_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot raw data and fixations — spatial_plot","text":"raw_data data standard raw data form (time, x, y, trial) fix_data data output fixation function sac_data data output saccade function AOIs dataframe areas interest (AOIs), one row per AOI (x, y, width_radius, height). using circular AOIs, 3rd column used radius height set NA. res resolution display shown, vector (xmin, xmax, ymin, ymax) flip_y reverse y axis coordinates (useful origin top screen) show_fix_order label fixations order made plot_header display header title text explains graphical features plot.","code":""},{"path":[]},{"path":[]},{"path":"https://tombeesley.github.io/eyetools/news/index.html","id":"eyetools-043","dir":"Changelog","previous_headings":"","what":"eyetools 0.4.3","title":"eyetools 0.4.3","text":"updated data files documentation started process using pkgdown fixed combine_eyes() remove column ‘trial_phase’","code":""},{"path":"https://tombeesley.github.io/eyetools/news/index.html","id":"eyetools-042","dir":"Changelog","previous_headings":"","what":"eyetools 0.4.2","title":"eyetools 0.4.2","text":"tidying dependencies","code":""},{"path":"https://tombeesley.github.io/eyetools/news/index.html","id":"eyetools-041","dir":"Changelog","previous_headings":"","what":"eyetools 0.4.1","title":"eyetools 0.4.1","text":"added progress bar (pbapply) fix_dispersion(). fixed bug VTI_saccade() couldn’t handle trials without saccades","code":""},{"path":"https://tombeesley.github.io/eyetools/news/index.html","id":"eyetools-040","dir":"Changelog","previous_headings":"","what":"eyetools 0.4.0","title":"eyetools 0.4.0","text":"Added NEWS.md file track changes package.","code":""}]
